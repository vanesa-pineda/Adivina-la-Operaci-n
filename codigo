import pygame
import random

# Configuración inicial
pygame.init()
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Adivina la Operación")

# Colores en tonos azules
BACKGROUND_COLOR = (30, 50, 80)
TEXT_COLOR = (200, 220, 255)
BUTTON_COLOR = (50, 80, 120)
BUTTON_HOVER = (80, 120, 180)
CORRECT_COLOR = (50, 180, 80)
WRONG_COLOR = (180, 50, 50)

# Fuente
font = pygame.font.Font(None, 40)
small_font = pygame.font.Font(None, 30)

# Generar pregunta matemática
def generar_pregunta():
    a, b = random.randint(1, 10), random.randint(1, 10)
    operacion = random.choice(["+", "-", "*", "/"])
    if operacion == "/":
        a = a * b  # Asegurar división exacta
    resultado = eval(f"{a} {operacion} {b}")
    opciones = [f"{a} + {b}", f"{a} - {b}", f"{a} * {b}", f"{a} / {b}"]
    random.shuffle(opciones)
    return resultado, opciones, f"{resultado}"

# Botón
class Button:
    def __init__(self, text, x, y, width, height):
        self.text = text
        self.rect = pygame.Rect(x, y, width, height)
        self.color = BUTTON_COLOR

    def draw(self, screen, hover=False):
        pygame.draw.rect(screen, BUTTON_HOVER if hover else self.color, self.rect, border_radius=10)
        text_surf = small_font.render(self.text, True, TEXT_COLOR)
        screen.blit(text_surf, text_surf.get_rect(center=self.rect.center))

    def is_clicked(self, pos):
        return self.rect.collidepoint(pos)

# Lógica principal
def main():
    clock = pygame.time.Clock()
    score = 0
    resultado, opciones, respuesta_correcta = generar_pregunta()
    buttons = [Button(opciones[i], 300, 200 + i * 80, 200, 50) for i in range(4)]
    message = ""
    message_color = TEXT_COLOR

    running = True
    while running:
        screen.fill(BACKGROUND_COLOR)
        
        title = font.render("¿Qué operación da este resultado?", True, TEXT_COLOR)
        screen.blit(title, (WIDTH // 2 - title.get_width() // 2, 50))
        
        result_text = font.render(str(resultado), True, TEXT_COLOR)
        screen.blit(result_text, (WIDTH // 2 - result_text.get_width() // 2, 120))

        for button in buttons:
            button.draw(screen, button.rect.collidepoint(pygame.mouse.get_pos()))
        
        message_surf = small_font.render(message, True, message_color)
        screen.blit(message_surf, (WIDTH // 2 - message_surf.get_width() // 2, HEIGHT - 80))
        
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            if event.type == pygame.MOUSEBUTTONDOWN:
                for button in buttons:
                    if button.is_clicked(event.pos):
                        if button.text == respuesta_correcta:
                            message = "¡Correcto!"
                            message_color = CORRECT_COLOR
                            score += 1
                        else:
                            message = "Incorrecto..."
                            message_color = WRONG_COLOR
                        pygame.time.delay(1000)
                        resultado, opciones, respuesta_correcta = generar_pregunta()
                        buttons = [Button(opciones[i], 300, 200 + i * 80, 200, 50) for i in range(4)]

        pygame.display.flip()
        clock.tick(30)
    
    pygame.quit()

if __name__ == "__main__":
    main()
